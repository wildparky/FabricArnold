// FabricArnold Extension

struct ArnoldNode
{
  Data node;
};

struct AtUserParamIterator
{
  Data it;
};

function ArnoldNode AiNode(in String name) = "fe_AiNode";
function ArnoldNode AiNodeLookUpByName(in String name) = "fe_AiNodeLookUpByName";
function AiNodeReset(in ArnoldNode node) = "fe_AiNodeReset";
function ArnoldNode AiNodeClone(in ArnoldNode node) = "fe_AiNodeClone";
function Boolean AiNodeDestroy(in ArnoldNode node) = "fe_AiNodeDestroy";
function Boolean AiNodeIs(in ArnoldNode node, in String str) = "fe_AiNodeIs";
function Boolean AiNodeDeclare(in ArnoldNode node, in String param, in String declaration) = "fe_AiNodeDeclare";
function Boolean AiNodeLink(in ArnoldNode src, in ArnoldNode target) = "fe_AiNodeLink";
function Boolean AiNodeLinkOutput(in ArnoldNode src, in ArnoldNode target, in String input) = "fe_AiNodeLinkOutput";
function Boolean AiNodeUnlink(in ArnoldNode node, in String input) = "fe_AiNodeUnlink";
function Boolean AiNodeIsLinked(in ArnoldNode node, in String input) = "fe_AiNodeIsLinked";
function ArnoldNode AiNodeGetLink(in ArnoldNode node, in String input, Integer comp) = "fe_AiNodeGetLink";
function String AiNodeGetName(in ArnoldNode node) = "fe_AiNodeGetName";
function AtNodeEntry AiNodeGetNodeEntry(in ArnoldNode node) = "fe_AiNodeGetNodeEntry";
function AtParamValue AiNodeGetParams(in ArnoldNode node) = "fe_AiNodeGetParams";
function Data AiNodeGetLocalData(in ArnoldNode node) = "fe_AiNodeGetLocalData";
function AiNodeSetLocalData(in ArnoldNode node, Data data) = "fe_AiNodeSetLocalData";
function AtUserParamEntry AiNodeLookUpUserParameter(in ArnoldNode node, in String param) = "fe_AiNodeLookUpUserParameter";
function AiNodeGetUserParamIterator(in ArnoldNode node) = "fe_AiNodeGetUserParamIterator";

// user param iterator methods
function AiUserParamIteratorDestroy(AtUserParamIterator iter) = "fe_AiUserParamIteratorDestroy";
function AtUserParamEntry AiUserParamIteratorGetNext(AtUserParamIterator iter) = "fe_AiUserParamIteratorGetNext";
function Boolean AiUserParamIteratorFinished(AtUserParamIterator iter) = "fe_AiUserParamIteratorFinished";

// node parameter writer functions
function AiNodeSetByte(ArnoldNode node, in String param, in Byte val) = "fe_AiNodeSetByte";
function AiNodeSetInt(ArnoldNode node, in String param, in Integer val) = "fe_AiNodeSetInt";
function AiNodeSetUInt(ArnoldNode node, in String param, in UInt32 val) = "fe_AiNodeSetUInt";
function AiNodeSetBool(ArnoldNode node, in String param, in Boolean val) = "fe_AiNodeSetBool";
function AiNodeSetFlt(ArnoldNode node, in String param, in Float32 val) = "fe_AiNodeSetFlt";
function AiNodeSetRGB(ArnoldNode node, in String param, in Float32 r, in Float32 g, in Float32 b) = "fe_AiNodeSetRGB";
function AiNodeSetRGBA(ArnoldNode node, in String param, in Float32 r, in Float32 g, in Float32 b, in Float32 a) = "fe_AiNodeSetRGBA";
function AiNodeSetVec(ArnoldNode node, in String param, in Float32 x, in Float32 y, in Float32 z) = "fe_AiNodeSetVec";
function AiNodeSetPnt(ArnoldNode node, in String param, in Float32 x, in Float32 y, in Float32 z) = "fe_AiNodeSetPnt";
function AiNodeSetPnt2(ArnoldNode node, in String param, in Float32 x, in Float32 y) = "fe_AiNodeSetPnt2";
function AiNodeSetStr(ArnoldNode node, in String param, in String str) = "fe_AiNodeSetStr";
function AiNodeSetPtr(ArnoldNode node, in String param, in Data ptr) = "fe_AiNodeSetPtr";
function AiNodeSetNode(ArnoldNode node, in String param, in ArnoldNode value) = "fe_AiNodeSetNode";
function AiNodeSetArray(ArnoldNode node, in String param, in AtArray array) = "fe_AiNodeSetArray";
function AiNodeSetMatrix(ArnoldNode node, in String param, in AtMatrix matrix) = "fe_AiNodeSetMatrix";
function AiNodeSetAttributes(ArnoldNode node, in String attributes) = "fe_AiNodeSetAttributes";

// node parameter reader functions
function Byte AiNodeGetByte(ArnoldNode node, in String param) = "fe_AiNodeGetByte";
function Integer AiNodeGetInt(ArnoldNode node, in String param) = "fe_AiNodeGetInt";
function UInt32 AiNodeGetUInt(ArnoldNode node, in String param) = "fe_AiNodeGetUInt";
function Boolean AiNodeGetBool(ArnoldNode node, in String param) = "fe_AiNodeGetBool";
function Float32 AiNodeGetFlt(ArnoldNode node, in String param) = "fe_AiNodeGetFlt";
function AtRGB AiNodeGetRGB(ArnoldNode node, in String param) = "fe_AiNodeGetRGB";
function AtRGBA AiNodeGetRGBA(ArnoldNode node, in String param) = "fe_AiNodeGetRGBA";
function AtVector AiNodeGetVec(ArnoldNode node, in String param) = "fe_AiNodeGetVec";
function AtPoint AiNodeGetPnt(ArnoldNode node, in String param) = "fe_AiNodeGetPnt";
function AtPoint2 AiNodeGetPnt2(ArnoldNode node, in String param) = "fe_AiNodeGetPnt2";
function String AiNodeGetStr(ArnoldNode node, in String param) = "fe_AiNodeGetStr";
function Data AiNodeGetPtr(ArnoldNode node, in String param) = "fe_AiNodeGetPtr";
function ArnoldNode AiNodeGetNode(ArnoldNode node, in String param) = "fe_AiNodeGetNode";
function AtArray AiNodeGetArray(ArnoldNode node, in String param) = "fe_AiNodeGetArray";
function AiNodeGetMatrix(ArnoldNode node, in String param, io AtMatrix matrix) = "fe_AiNodeGetMatrix";

// convenience methods, not representative of the Arnold API
// node parameter writer methods
function ArnoldNode.setByte?(in String param, in Byte value) = "fe_AiNodeSetByte";
function ArnoldNode.setInt?(in String param, in Integer value) = "fe_AiNodeSetInt";
function ArnoldNode.setUInt?(in String param, in UInt32 value) = "fe_AiNodeSetUInt";
function ArnoldNode.setBool?(in String param, in Boolean value) = "fe_AiNodeSetBool";
function ArnoldNode.setFlt?(in String param, in Float32 value) = "fe_AiNodeSetFlt";
function ArnoldNode.setRGB?(in String param, in Float32 r, in Float32 g, in Float32 b) = "fe_AiNodeSetRGB";
function ArnoldNode.setRGBA?(in String param, in Float32 r, in Float32 g, in Float32 b, in Float32 a) = "fe_AiNodeSetRGBA";
function ArnoldNode.setVec?(in String param, in Float32 x, in Float32 y, in Float32 z) = "fe_AiNodeSetVec";
function ArnoldNode.setPnt?(in String param, in Float32 x, in Float32 y, in Float32 z) = "fe_AiNodeSetPnt";
function ArnoldNode.setPnt2?(in String param, in Float32 x, in Float32 y) = "fe_AiNodeSetPnt2";
function ArnoldNode.setStr?(in String param, in String value) = "fe_AiNodeSetStr";
function ArnoldNode.setPtr?(in String param, in Data value) = "fe_AiNodeSetPtr";
function ArnoldNode.setNode?(in String param, in ArnoldNode value) = "fe_AiNodeSetNode";
function ArnoldNode.setArray?(in String param, in AtArray value) = "fe_AiNodeSetArray";
function ArnoldNode.setMatrix?(in String param, in AtMatrix value) = "fe_AiNodeSetMatrix";
function ArnoldNode.setAttributes?(in String attributes) = "fe_AiNodeSetAttributes";

// node parameter reader methods
function Byte ArnoldNode.getByte?(in String param) = "fe_AiNodeGetByte";
function Integer ArnoldNode.getInt?(in String param) = "fe_AiNodeGetInt";
function Size ArnoldNode.getUInt?(in String param) = "fe_AiNodeGetUInt";
function Boolean ArnoldNode.getBool?(in String param) = "fe_AiNodeGetBool";
function Float32 ArnoldNode.getFlt?(in String param) = "fe_AiNodeGetFlt";
function AtRGB ArnoldNode.getRGB?(in String param) = "fe_AiNodeGetRGB";
function AtRGBA ArnoldNode.getRGBA?(in String param) = "fe_AiNodeGetRGBA";
function AtVector ArnoldNode.getVec?(in String param) = "fe_AiNodeGetVec";
function AtPoint ArnoldNode.getPnt?(in String param) = "fe_AiNodeGetPnt";
function AtVector2 ArnoldNode.getPnt2?(in String param) = "fe_AiNodeGetPnt2";
function String ArnoldNode.getStr?(in String param) = "fe_AiNodeGetStr";
function String ArnoldNode.getName?() = "fe_AiNodeGetName";
function Data ArnoldNode.getPtr?(in String param) = "fe_AiNodeGetPtr";
function ArnoldNode ArnoldNode.getNode?(in String param) = "fe_AiNodeGetNode";
function AtArray ArnoldNode.getArray?(in String param) = "fe_AiNodeGetArray";
function ArnoldNode.getMatrix?(in String param, io AtMatrix matrix) = "fe_AiNodeGetMatrix";
