//
// Copyright (c) 2014, Steven Caron <steven@steven-caron.com> All rights reserved.
//
// FabricArnold Extension

struct AtNode
{
  Data node;
};

struct AtUserParamIterator
{
  Data it;
};

function AtNode AiNode(String name) = "fe_AiNode";
function AtNode AiNodeLookUpByName(String name) = "fe_AiNodeLookUpByName";
function AiNodeReset(io AtNode node) = "fe_AiNodeReset";
function AtNode AiNodeClone(AtNode node) = "fe_AiNodeClone";
function Boolean AiNodeDestroy(io AtNode node) = "fe_AiNodeDestroy";
function Boolean AiNodeIs(AtNode node, String str) = "fe_AiNodeIs";
function Boolean AiNodeDeclare(AtNode node, String param, String declaration) = "fe_AiNodeDeclare";
function Boolean AiNodeLink(AtNode src, String input, AtNode target) = "fe_AiNodeLink";
function Boolean AiNodeLinkOutput(AtNode src, String output, AtNode target, String input) = "fe_AiNodeLinkOutput";
function Boolean AiNodeUnlink(AtNode node, String input) = "fe_AiNodeUnlink";
function Boolean AiNodeIsLinked(AtNode node, String input) = "fe_AiNodeIsLinked";
function AtNode AiNodeGetLink(AtNode node, String input, Integer comp) = "fe_AiNodeGetLink";
function String AiNodeGetName(AtNode node) = "fe_AiNodeGetName";
function AtNodeEntry AiNodeGetNodeEntry(AtNode node) = "fe_AiNodeGetNodeEntry";
// function AtParamValue AiNodeGetParams(in AtNode node) = "fe_AiNodeGetParams";
// function Data AiNodeGetLocalData(in AtNode node) = "fe_AiNodeGetLocalData";
// function AiNodeSetLocalData(in AtNode node, Data data) = "fe_AiNodeSetLocalData";
// function AtUserParamEntry AiNodeLookUpUserParameter(in AtNode node, in String param) = "fe_AiNodeLookUpUserParameter";
// function AiNodeGetUserParamIterator(in AtNode node) = "fe_AiNodeGetUserParamIterator";

// user param iterator methods
// function AiUserParamIteratorDestroy(AtUserParamIterator iter) = "fe_AiUserParamIteratorDestroy";
// function AtUserParamEntry AiUserParamIteratorGetNext(AtUserParamIterator iter) = "fe_AiUserParamIteratorGetNext";
// function Boolean AiUserParamIteratorFinished(AtUserParamIterator iter) = "fe_AiUserParamIteratorFinished";

// node parameter writer functions
function AiNodeSetByte(io AtNode node, String param, Byte val) = "fe_AiNodeSetByte";
function AiNodeSetInt(io AtNode node, String param, Integer val) = "fe_AiNodeSetInt";
function AiNodeSetUInt(io AtNode node, String param, UInt32 val) = "fe_AiNodeSetUInt";
function AiNodeSetBool(io AtNode node, String param, Boolean val) = "fe_AiNodeSetBool";
function AiNodeSetFlt(io AtNode node, String param, Float32 val) = "fe_AiNodeSetFlt";
function AiNodeSetRGB(io AtNode node, String param, Float32 r, Float32 g, Float32 b) = "fe_AiNodeSetRGB";
function AiNodeSetRGBA(io AtNode node, String param, Float32 r, Float32 g, Float32 b, Float32 a) = "fe_AiNodeSetRGBA";
function AiNodeSetVec(io AtNode node, String param, Float32 x, Float32 y, Float32 z) = "fe_AiNodeSetVec";
function AiNodeSetPnt(io AtNode node, String param, Float32 x, Float32 y, Float32 z) = "fe_AiNodeSetPnt";
function AiNodeSetPnt2(io AtNode node, String param, Float32 x, Float32 y) = "fe_AiNodeSetPnt2";
function AiNodeSetStr(io AtNode node, String param, String str) = "fe_AiNodeSetStr";
function AiNodeSetPtr(io AtNode node, String param, Data ptr) = "fe_AiNodeSetPtr";
function AiNodeSetNode(io AtNode node, String param, AtNode value) = "fe_AiNodeSetNode";
function AiNodeSetArray(io AtNode node, String param, io AtArray array) = "fe_AiNodeSetArray";
function AiNodeSetMatrix(io AtNode node, String param, io AtMatrix matrix) = "fe_AiNodeSetMatrix";
function AiNodeSetAttributes(io AtNode node, String attributes) = "fe_AiNodeSetAttributes";

// node parameter reader functions
function Byte AiNodeGetByte(AtNode node, String param) = "fe_AiNodeGetByte";
function Integer AiNodeGetInt(AtNode node, String param) = "fe_AiNodeGetInt";
function UInt32 AiNodeGetUInt(AtNode node, String param) = "fe_AiNodeGetUInt";
function Boolean AiNodeGetBool(AtNode node, String param) = "fe_AiNodeGetBool";
function Float32 AiNodeGetFlt(AtNode node, String param) = "fe_AiNodeGetFlt";
function AtRGB AiNodeGetRGB(AtNode node, String param) = "fe_AiNodeGetRGB";
function AtRGBA AiNodeGetRGBA(AtNode node, String param) = "fe_AiNodeGetRGBA";
function AtVector AiNodeGetVec(AtNode node, String param) = "fe_AiNodeGetVec";
function AtPoint AiNodeGetPnt(AtNode node, String param) = "fe_AiNodeGetPnt";
function AtPoint2 AiNodeGetPnt2(AtNode node, String param) = "fe_AiNodeGetPnt2";
function String AiNodeGetStr(AtNode node, String param) = "fe_AiNodeGetStr";
function Data AiNodeGetPtr(AtNode node, String param) = "fe_AiNodeGetPtr";
function AtNode AiNodeGetNode(AtNode node, String param) = "fe_AiNodeGetNode";
function AtArray AiNodeGetArray(AtNode node, String param) = "fe_AiNodeGetArray";
function AiNodeGetMatrix(AtNode node, String param, io AtMatrix matrix) = "fe_AiNodeGetMatrix";

// convenience methods, not representative of the Arnold API
// node parameter writer methods
function AtNode.setByte(String param, Byte value) = "fe_AiNodeSetByte";
function AtNode.setInt(String param, Integer value) = "fe_AiNodeSetInt";
function AtNode.setUInt(String param, UInt32 value) = "fe_AiNodeSetUInt";
function AtNode.setBool(String param, Boolean value) = "fe_AiNodeSetBool";
function AtNode.setFlt(String param, Float32 value) = "fe_AiNodeSetFlt";
function AtNode.setRGB(String param, Float32 r, Float32 g, Float32 b) = "fe_AiNodeSetRGB";
function AtNode.setRGBA(String param, Float32 r, Float32 g, Float32 b, Float32 a) = "fe_AiNodeSetRGBA";
function AtNode.setVec(String param, Float32 x, Float32 y, Float32 z) = "fe_AiNodeSetVec";
function AtNode.setPnt(String param, Float32 x, Float32 y, Float32 z) = "fe_AiNodeSetPnt";
function AtNode.setPnt2(String param, Float32 x, Float32 y) = "fe_AiNodeSetPnt2";
function AtNode.setStr(String param, String value) = "fe_AiNodeSetStr";
function AtNode.setPtr(String param, Data value) = "fe_AiNodeSetPtr";
function AtNode.setNode(String param, AtNode value) = "fe_AiNodeSetNode";
function AtNode.setArray(String param, io AtArray value) = "fe_AiNodeSetArray";
function AtNode.setMatrix(String param, io AtMatrix value) = "fe_AiNodeSetMatrix";
function AtNode.setAttributes(String attributes) = "fe_AiNodeSetAttributes";

// node parameter reader methods
function Byte AtNode.getByte?(String param) = "fe_AiNodeGetByte";
function Integer AtNode.getInt?(String param) = "fe_AiNodeGetInt";
function Size AtNode.getUInt?(String param) = "fe_AiNodeGetUInt";
function Boolean AtNode.getBool?(String param) = "fe_AiNodeGetBool";
function Float32 AtNode.getFlt?(String param) = "fe_AiNodeGetFlt";
function AtRGB AtNode.getRGB?(String param) = "fe_AiNodeGetRGB";
function AtRGBA AtNode.getRGBA?(String param) = "fe_AiNodeGetRGBA";
function AtVector AtNode.getVec?(String param) = "fe_AiNodeGetVec";
function AtPoint AtNode.getPnt?(String param) = "fe_AiNodeGetPnt";
function AtVector2 AtNode.getPnt2?(String param) = "fe_AiNodeGetPnt2";
function String AtNode.getStr?(String param) = "fe_AiNodeGetStr";
function String AtNode.getName?() = "fe_AiNodeGetName";
function Data AtNode.getPtr?(String param) = "fe_AiNodeGetPtr";
function AtNode AtNode.getNode?(String param) = "fe_AiNodeGetNode";
function AtArray AtNode.getArray?(String param) = "fe_AiNodeGetArray";
function AtNode.getMatrix?(String param, io AtMatrix matrix) = "fe_AiNodeGetMatrix";
