// FabricArnold Extension

struct ArnoldArray
{
  Data array;
  UInt32 nelements;
  Byte nkeys;
  Byte type;
  Byte padding;
};

function ArnoldArray AiArray(UInt32 nelements, Byte nkeys, Byte type) = "fe_AiArray";
function ArnoldArray AiArrayAllocate(UInt32 nelements, Byte nkeys, Byte type) = "fe_AiArrayAllocate";
function AiArrayDestroy(ArnoldArray array) = "fe_AiArrayDestroy";
function ArnoldArray AiArrayConvert(UInt32 nelements, Byte nkeys, Byte type, Data data) = "fe_AiArrayConvert";
function ArnoldArray AiArrayModify(ArnoldArray array, UInt32 nelements, Byte nkeys, Byte type) = "fe_AiArrayModify";
function ArnoldArray AiArrayCopy(ArnoldArray array) = "fe_AiArrayCopy";
function Boolean AiArraySetKey(ArnoldArray array, Byte key, Data data) = "fe_AiArraySetKey";
function AtPoint AiArrayInterpolatePnt(ArnoldArray array, Float32 time, UInt32 idx) = "fe_AiArrayInterpolatePnt";
function AtVector AiArrayInterpolateVec(ArnoldArray array, Float32 time, UInt32 idx) = "fe_AiArrayInterpolateVec";
function AtColor AiArrayInterpolateRGB(ArnoldArray array, Float32 time, UInt32 idx) = "fe_AiArrayInterpolateRGB";
function AtRGBA AiArrayInterpolateRGBA(ArnoldArray array, Float32 time, UInt32 idx) = "fe_AiArrayInterpolateRGBA";
function Float32 AiArrayInterpolateFlt(ArnoldArray array, Float32 time, UInt32 idx) = "fe_AiArrayInterpolateFlt";
function AiArrayInterpolateMtx(ArnoldArray array, Float32 time, UInt32 idx, io AtMatrix result) = "fe_AiArrayInterpolateMtx";

// array getters
function Boolean AiArrayGetBool(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetBool";
function Byte AiArrayGetByte(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetByte";
function Integer AiArrayGetInt(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetInt";
function UInt32 AiArrayGetUInt(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetUInt";
function Float32 AiArrayGetFlt(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetFlt";
function AtRGB AiArrayGetRGB(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetRGB";
function AtRGBA AiArrayGetRGBA( in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetRGBA";
function AtPoint AiArrayGetPnt(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetPnt";
function AtPoint2 AiArrayGetPnt2(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetPnt2";
function AtVector AiArrayGetVec(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetVec";
function AiArrayGetMtx(in ArnoldArray a, in UInt32 i, io AtMatrix out) = "fe_AiArrayGetMtx";
function String AiArrayGetStr(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetStr";
function Data AiArrayGetPtr(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetPtr";
function ArnoldArray AiArrayGetArray(in ArnoldArray a, in UInt32 i) = "fe_AiArrayGetArray";

// array setters
function AiArraySetBool(io ArnoldArray a, in UInt32 i, in Boolean val) = "fe_AiArraySetBool";
function AiArraySetByte(io ArnoldArray a, in UInt32 i, in Byte val) = "fe_AiArraySetByte";
function AiArraySetInt(io ArnoldArray a, in UInt32 i, in Integer val) = "fe_AiArraySetInt";
function AiArraySetUInt(io ArnoldArray a, in UInt32 i, in UInt8 val) = "fe_AiArraySetUInt";
function AiArraySetFlt(io ArnoldArray a, in UInt32 i, in Float32 val) = "fe_AiArraySetFlt";
function AiArraySetRGB(io ArnoldArray a, in UInt32 i, in AtRGB val) = "fe_AiArraySetRGB";
function AiArraySetRGBA(io ArnoldArray a, in UInt32 i, in AtRGBA val) = "fe_AiArraySetRGBA";
function AiArraySetPnt(io ArnoldArray a, in UInt32 i, in AtPoint val) = "fe_AiArraySetPnt";
function AiArraySetPnt2(io ArnoldArray a, in UInt32 i, in AtPoint val) = "fe_AiArraySetPnt2";
function AiArraySetVec(io ArnoldArray a, in UInt32 i, in AtVector val) = "fe_AiArraySetVec";
function AiArraySetMtx(io ArnoldArray a, in UInt32 i, in AtMatrix val) = "fe_AiArraySetMtx";
function AiArraySetStr(io ArnoldArray a, in UInt32 i, in String val) = "fe_AiArraySetStr";
function AiArraySetPtr(io ArnoldArray a, in UInt32 i, in Data val) = "fe_AiArraySetPtr";
function AiArraySetArray(io ArnoldArray a, in UInt32 i, in ArnoldArray val) = "fe_AiArraySetArray";
